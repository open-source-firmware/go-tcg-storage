// Copyright (c) 2021 by library authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package uid

// UID is a general type which all UID shall be based upon.
// Specified in TCG Storage Architecture Core Specification Version 2.01 - Rev 1.0
type UID [8]byte

type HalfUID [4]byte

type RowUID UID

type InvokingID UID

type SPID UID

type AuthorityObjectUID UID

func (a UID) HalfUid() HalfUID {
	return HalfUID{a[4], a[5], a[6], a[7]}
}

func (a AuthorityObjectUID) RowUID() RowUID {
	return RowUID{a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]}
}

var (
	ColumnTypeAuthorityObjectRef = UID{0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x0C, 0x05}
	ColumnTypeBooleanACE         = UID{0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x04, 0x0E}
)

var (
	InvokeIDNull   = InvokingID{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
	InvokeIDThisSP = InvokingID{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}
	InvokeIDSMU    = InvokingID{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF}
)

var (
	LockingAuthorityBandMaster0 = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x80, 0x01}
	EraseMaster                 = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x84, 0x01}
	AuthorityAnybody            = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01}
	AuthorityAdmins             = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02}
	AuthoritySID                = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06}
	AuthorityPSID               = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x01, 0xFF, 0x01} // Opal Feature Set: PSID
	// LockingSP
	LockingAuthorityAdmin1 = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x01, 0x00, 0x01}
	LockingAuthorityAdmin2 = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x01, 0x00, 0x02}
	LockingAuthorityAdmin3 = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x01, 0x00, 0x03}
	LockingAuthorityAdmin4 = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x01, 0x00, 0x04}
	LockingAuthorityUsers  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x00}
	LockingAuthorityUser1  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x01}
	LockingAuthorityUser2  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x02}
	LockingAuthorityUser3  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x03}
	LockingAuthorityUser4  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x04}
	LockingAuthorityUser5  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x05}
	LockingAuthorityUser6  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x06}
	LockingAuthorityUser7  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x07}
	LockingAuthorityUser8  = AuthorityObjectUID{0x00, 0x00, 0x00, 0x09, 0x00, 0x03, 0x00, 0x08}
)

var (
	GlobalRangeRowUID  RowUID = [8]byte{0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x01}
	Band1Enterprise    RowUID = [8]byte{0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x02}
	ACEDataStoreGetAll RowUID = [8]byte{0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0xFC, 0x00}
	ACEDataStoreSetAll RowUID = [8]byte{0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0xFC, 0x01}
)

var (
	AdminSP             = SPID{0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x00, 0x01}
	LockingSP           = SPID{0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x00, 0x02}
	EnterpriseLockingSP = SPID{0x00, 0x00, 0x02, 0x05, 0x00, 0x01, 0x00, 0x01} // Enterprise SSC
)
